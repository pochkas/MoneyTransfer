/*
 * This file is generated by jOOQ.
 */
package generated.tables.records;


import generated.tables.Moneytransfer;

import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class MoneytransferRecord extends UpdatableRecordImpl<MoneytransferRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.moneyTransfer.id</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.moneyTransfer.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>public.moneyTransfer.fromAccountNumber</code>.
     */
    public void setFromaccountnumber(Long value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.moneyTransfer.fromAccountNumber</code>.
     */
    public Long getFromaccountnumber() {
        return (Long) get(1);
    }

    /**
     * Setter for <code>public.moneyTransfer.toAccountNumber</code>.
     */
    public void setToaccountnumber(Long value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.moneyTransfer.toAccountNumber</code>.
     */
    public Long getToaccountnumber() {
        return (Long) get(2);
    }

    /**
     * Setter for <code>public.moneyTransfer.amount</code>.
     */
    public void setAmount(Double value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.moneyTransfer.amount</code>.
     */
    public Double getAmount() {
        return (Double) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached MoneytransferRecord
     */
    public MoneytransferRecord() {
        super(Moneytransfer.MONEYTRANSFER);
    }

    /**
     * Create a detached, initialised MoneytransferRecord
     */
    public MoneytransferRecord(Long id, Long fromaccountnumber, Long toaccountnumber, Double amount) {
        super(Moneytransfer.MONEYTRANSFER);

        setId(id);
        setFromaccountnumber(fromaccountnumber);
        setToaccountnumber(toaccountnumber);
        setAmount(amount);
        resetChangedOnNotNull();
    }
}
